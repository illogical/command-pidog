version: '3.8'

services:
  # Tailscale service to connect to your Tailscale network
  tailscale:
    image: ghcr.io/tailscale/tailscale:latest # Official Tailscale image
    container_name: tailscale_daemon
    hostname: command-pidog # Sets the container's hostname
    environment:
      # Your Tailscale authentication key.
      # REQUIRED: Set this in a .env file or directly in your environment.
      # Example: TS_AUTHKEY=tskey-auth-yourkeyhere...
      - TS_AUTHKEY=${TS_AUTHKEY:-}
      # Sets the advertised hostname on your Tailscale network.
      # Defaults to 'bun-static-server' if TS_HOSTNAME is not set in your environment.
      - TS_HOSTNAME=${TS_HOSTNAME:-bun-static-server}
      # Tells Tailscale where to store its state data within the container.
      - TS_STATE_DIR=/var/lib/tailscale
      - TS_SERVE_CONFIG=/config/https.json
      # Optional: Add tags for Tailscale ACLs or auto-approval.
      # Example: --advertise-tags=tag:docker-server,tag:web
      # - TS_EXTRA_ARGS=--advertise-tags=tag:my-app
    volumes:
      # Mounts a named Docker volume to persist Tailscale state across container restarts.
      - tailscale_state:/var/lib/tailscale
      # Required for Tailscale to create the tunnel interface.
      - /dev/net/tun:/dev/net/tun
    cap_add:
      # Required for Tailscale to manage network interfaces and routing.
      - NET_ADMIN
      - SYS_MODULE # May be needed for WireGuard kernel module interactions.
    restart: unless-stopped
    # The default command for the image is `tailscaled`, so explicitly setting it is optional.
    # command: tailscaled

  # Bun web server service to host your static site
  bun-web:
    image: oven/bun:latest # Official Bun image
    container_name: bun_web_server
    depends_on:
      - tailscale # Ensures Tailscale starts before the Bun service
    # CRITICAL: This makes the Bun service use Tailscale's network stack.
    # The web server will be accessible via the Tailscale IP of the 'tailscale' service.
    network_mode: "service:tailscale"
    volumes:
      # Mount your local './www' directory (containing your static files like index.html)
      # to '/app/www' inside the Bun container.
      - ./voice-commands:/app/www
    # Command to start Bun's built-in static file server.
    # It serves files from '/app/html' on port 80 (internal to the container's network).
    # This port 80 will be accessible via the Tailscale IP.
    command: ["bunx", "serve", "/app/www", "--port", "80"]
    restart: unless-stopped
    # working_dir: /app # Optional: set working directory if needed by your Bun setup

# Named volume to persist Tailscale state
volumes:
  tailscale_state: {}
